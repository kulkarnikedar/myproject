{"version":3,"sources":["webpack:///./src/app/signup/signup.module.ts","webpack:///./src/app/signup/signup.page.html","webpack:///./src/app/signup/signup.page.scss","webpack:///./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>signup</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form novalidate (ngSubmit)=\\\"signup()\\\" [formGroup]=\\\"signupform\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">First Name </ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\" name=\\\"firstname\\\" [class.error1]=\\\"!signupform.controls.firstname.valid && signupform.controls.firstname.dirty\\\"></ion-input>\\n    </ion-item>\\n    <ion-item no-lines *ngIf=\\\"( signupform.get('firstname').hasError('minlength') || signupform.get('firstname').hasError('maxlength') ||signupform.get('firstname').hasError('pattern') ||signupform.get('firstname').hasError('required') ) && signupform.get('firstname').touched\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('firstname').hasError('required') && signupform.get('firstname').touched\\\">\\n        Please input your first name\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('firstname').hasError('minlength') && signupform.get('firstname').touched\\\">\\n        Minimum 4 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('firstname').hasError('maxlength') && signupform.get('firstname').touched\\\">\\n        Maximum 30 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('firstname').hasError('pattern') && signupform.get('firstname').touched\\\">\\n        Just use alphabet character\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Last Name </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" [class.error1]=\\\"!signupform.controls.lastname.valid && signupform.controls.lastname.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('lastname').hasError('minlength') || signupform.get('lastname').hasError('maxlength') ||signupform.get('lastname').hasError('pattern') ||signupform.get('lastname').hasError('required') ) && signupform.get('lastname').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('lastname').hasError('required') && signupform.get('lastname').touched\\\">\\n          Please input your last name\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('lastname').hasError('minlength') && signupform.get('lastname').touched\\\">\\n          Minimum 4 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('lastname').hasError('maxlength') && signupform.get('lastname').touched\\\">\\n          Maximum 30 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('lastname').hasError('pattern') && signupform.get('lastname').touched\\\">\\n          Just use alphabet character\\n        </div>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" [class.error1]=\\\"!signupform.controls.email.valid && signupform.controls.email.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('email').hasError('minlength') || signupform.get('email').hasError('pattern') ||signupform.get('email').hasError('required') ) && signupform.get('email').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('required') && signupform.get('email').touched\\\">\\n          Please input your email\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('pattern') && signupform.get('email').touched\\\">\\n          Email address invalid\\n        </div>\\n      </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Username</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" [class.error1]=\\\"!signupform.controls.username.valid && signupform.controls.username.dirty\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-lines *ngIf=\\\"( signupform.get('username').hasError('minlength') || signupform.get('username').hasError('maxlength') ||signupform.get('username').hasError('pattern') ||signupform.get('username').hasError('required') ) && signupform.get('username').touched\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('username').hasError('required') && signupform.get('username').touched\\\">\\n        Please input your username\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('username').hasError('minlength') && signupform.get('username').touched\\\">\\n        Minimum 4 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('username').hasError('maxlength') && signupform.get('username').touched\\\">\\n        Maximum 10 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('username').hasError('pattern') && signupform.get('username').touched\\\">\\n        Just use alphabet character\\n      </div>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" [class.error1]=\\\"!signupform.controls.password.valid && signupform.controls.password.dirty\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-lines *ngIf=\\\"( signupform.get('password').hasError('minlength') || signupform.get('password').hasError('maxlength') ||signupform.get('password').hasError('required') ) && signupform.get('password').touched\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('password').hasError('required') && signupform.get('password').touched\\\">\\n        Please input your password\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('password').hasError('minlength') && signupform.get('password').touched\\\">\\n        Minimum 6 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"signupform.get('password').hasError('maxlength') && signupform.get('password').touched\\\">\\n        Maximum 12 characters\\n      </div>\\n    </ion-item>\\n    <ion-button  type=\\\"submit\\\" size=\\\"block\\\" color=\\\"primary\\\" [disabled]=\\\"signupform.invalid\\\">SIGNUP</ion-button>\\n    <div>\\n      <a  routerLink=\\\"/login\\\">Already have an account click here to sign in</a>\\n    </div>\\n</form>\\n</ion-content>\\n\"","module.exports = \".error {\\n  color: red; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Events } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormControl, ReactiveFormsModule   } from '@angular/forms';\n\nimport {AuthnticationService} from '../service/authntication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  signupform: FormGroup;\n  constructor(public auth: AuthnticationService,\n    private route:Router) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SignupPage');\n  }\n\n  ngOnInit(){\n    this.signupform = new FormGroup({\n      \n      firstname: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(30)]),\n      lastname: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(30)]),\n      email: new FormControl('', [Validators.required, Validators.pattern('^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$'), Validators.minLength(4), Validators.maxLength(30)]),\n      username: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(10)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]),\n    });\n  }\n\n  signup(){\n    console.log(this.signupform.value);\n    this.auth.register(this.signupform.value).subscribe(\n      (suc) => {\n        console.log(`saved successfully ${suc}`);\n        this.route.navigate(['/login']);\n      },\n      (err) => {\n        console.log(`error ${err}`);\n      }\n    );\n  }\n\n}\n"],"sourceRoot":""}